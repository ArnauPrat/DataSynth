package org.dama.datasynth.runtime.spark.operators

import org.dama.datasynth.executionplan.ExecutionPlan.PropertyGenerator
import org.dama.datasynth.runtime.spark.utils._
import org.dama.datasynth._
import org.dama.datasynth.common.generators.property

import scala.util.{Failure, Success}

/**
  * Created by aprat on 9/04/17.
  *
  * Operator to instantiate property generators
  */
object InstantiatePropertyGeneratorOperator {

  /**
    * Instantiates a property generator
    * @param info The execution plan node representing the property generator
    * @tparam T The type of the property generated by the instantiated property generator
    * @return The instantiated property generator
    */
  def apply[T](propertyTableName : String, info : PropertyGenerator[T]) : PropertyGeneratorWrapper[T] = {
    property.PropertyGenerator.getInstance[T](info.className) match {
      case Success(generator) => {
        val initParameters : Seq[Any] = info.initParameters.map( x => EvalValueOperator(x))
        generator.initialize(initParameters : _*)
        val rndGen = FetchRndGeneratorOperator(propertyTableName)
        val dependentPGs = info.dependentPropertyTables.map( pt => InstantiatePropertyGeneratorOperator(pt.name, pt.generator))
        PropertyGeneratorWrapper[T](generator,rndGen,dependentPGs)
      }
      case Failure(e) => throw e
      }
  }
}
